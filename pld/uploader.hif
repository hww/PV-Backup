HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	look_add.tdf
	{
		look_add [DEVICE_FAMILY,CARRY_CHAIN,width,USE_LPM_FOR_AHDL_OPERATORS] [look_add.inc,aglobal.inc]
		{
			26 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN=IGNORE,width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cout1,cout0,bg_in1,bg_in0,bp_in1,bp_in0,cin];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN=0,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			25 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,bg_out,bp_out,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			24 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,bg_out,bp_out,dataa0,datab0,cin];
			19 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			18 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,dataa0,datab0,cin];
			17 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
		}
	}
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			11 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=1,LEVEL=0,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			9 [CASCADE_CHAIN=IGNORE,LOCAL=1,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			8 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=0,SIZE=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data3,data2,data1,data0,select1,select0];
			7 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data4,data3,data2,data1,data0,select2,select1,select0];
		}
	}
	bypassff.tdf
	{
		bypassff [WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			5 [WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,d2,d1,d0];
		}
	}
	declut.tdf
	{
		declut [LATENCY,TOT_LEVELS,STAGE,width,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,bypassff.inc]
		{
			3 [LATENCY=0,TOT_LEVELS=1,STAGE=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable,clock,aclr];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			22 [DEPTH=0,WIDTH=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			20 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			15 [DEPTH=0,WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			13 [DEPTH=0,WIDTH=29,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result28,result27,result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data28,data27,data26,data25,data24,data23,data22,data21,data20,data19,data18,data17,data16,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			6 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
			2 [DEPTH=1,WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result5,result4,result3,result2,result1,result0,data5,data4,data3,data2,data1,data0,clock,aclr];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			23 [STYLE=FAST,DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			16 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			21 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data1_11,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_11,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
			14 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
			12 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=29,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result26,result25,result24,result23,result22,result21,result20,result19,result18,result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data1_28,data1_27,data1_26,data1_25,data1_24,data1_23,data1_22,data1_21,data1_20,data1_19,data1_18,data1_17,data1_16,data1_15,data1_14,data1_13,data1_12,data1_11,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_28,data0_27,data0_26,data0_25,data0_24,data0_23,data0_22,data0_21,data0_20,data0_19,data0_18,data0_17,data0_16,data0_15,data0_14,data0_13,data0_12,data0_11,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
			10 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
			4 [LPM_PIPELINE=0,LPM_WIDTHS=3,LPM_SIZE=5,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data4_7,data4_6,data4_5,data4_4,data4_3,data4_2,data4_1,data4_0,data3_7,data3_6,data3_5,data3_4,data3_3,data3_2,data3_1,data3_0,data2_7,data2_6,data2_5,data2_4,data2_3,data2_2,data2_1,data2_0,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel2,sel1,sel0];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [DEVICE_FAMILY,CASCADE_CHAIN,LPM_PIPELINE=0,LPM_DECODES,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,altshift.inc,lpm_compare.inc,lpm_constant.inc,aglobal.inc]
		{
			1 [DEVICE_FAMILY=MAX7000S,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=1,LPM_DECODES=6,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [clock,enable,data0,data1,data2,eq0,eq1,eq2,eq3,eq4,eq5];
		}
	}
	uploader.tdf
	{
		uploader [USE_LPM_FOR_AHDL_OPERATORS] [lpm_decode.inc,lpm_counter.inc,lpm_mux.inc,lpm_add_sub.inc]
		{
			0 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [];
		}
	}
}
TREE
{
	uploader::(0,0):(0): uploader.tdf
	{
		lpm_mux:21:(76,1):(360,amux): lpm_mux.tdf
		{
			muxlut:11:(167,21):(238): muxlut.tdf;
			muxlut:11:(167,21):(225): muxlut.tdf;
			muxlut:11:(167,21):(212): muxlut.tdf;
			muxlut:11:(167,21):(199): muxlut.tdf;
			muxlut:11:(167,21):(186): muxlut.tdf;
			muxlut:11:(167,21):(173): muxlut.tdf;
			muxlut:11:(167,21):(160): muxlut.tdf;
			muxlut:11:(167,21):(147): muxlut.tdf;
			muxlut:11:(167,21):(134): muxlut.tdf;
			muxlut:11:(167,21):(121): muxlut.tdf;
			muxlut:11:(167,21):(108): muxlut.tdf;
			muxlut:11:(167,21):(95): muxlut.tdf;
			altshift:22:(88,2):(66,external_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:23:(73,1):(321,add): lpm_add_sub.tdf
		{
			altshift:20:(220,2):(163,oflow_ext_latency_ffs): altshift.tdf;
			altshift:20:(218,2):(156,carry_ext_latency_ffs): altshift.tdf;
			altshift:15:(216,2):(133,result_ext_latency_ffs): altshift.tdf;
			look_add:26:(210,4):(122,look_aheader): look_add.tdf;
			addcore:25:(209,9):(91,adder0): addcore.tdf;
			addcore:24:(209,9):(60,adder1): addcore.tdf;
		}
		lpm_mux:14:(70,1):(286,incmux): lpm_mux.tdf
		{
			muxlut:11:(167,21):(184): muxlut.tdf;
			muxlut:11:(167,21):(171): muxlut.tdf;
			muxlut:11:(167,21):(158): muxlut.tdf;
			muxlut:11:(167,21):(145): muxlut.tdf;
			muxlut:11:(167,21):(132): muxlut.tdf;
			muxlut:11:(167,21):(119): muxlut.tdf;
			muxlut:11:(167,21):(106): muxlut.tdf;
			muxlut:11:(167,21):(93): muxlut.tdf;
			muxlut:11:(167,21):(80): muxlut.tdf;
			altshift:15:(88,2):(57,external_latency_ffs): altshift.tdf;
		}
		lpm_mux:12:(67,1):(191,dmux): lpm_mux.tdf
		{
			muxlut:11:(167,21):(544): muxlut.tdf;
			muxlut:11:(167,21):(531): muxlut.tdf;
			muxlut:11:(167,21):(518): muxlut.tdf;
			muxlut:11:(167,21):(505): muxlut.tdf;
			muxlut:11:(167,21):(492): muxlut.tdf;
			muxlut:11:(167,21):(479): muxlut.tdf;
			muxlut:11:(167,21):(466): muxlut.tdf;
			muxlut:11:(167,21):(453): muxlut.tdf;
			muxlut:11:(167,21):(440): muxlut.tdf;
			muxlut:11:(167,21):(427): muxlut.tdf;
			muxlut:11:(167,21):(414): muxlut.tdf;
			muxlut:11:(167,21):(401): muxlut.tdf;
			muxlut:11:(167,21):(388): muxlut.tdf;
			muxlut:11:(167,21):(375): muxlut.tdf;
			muxlut:11:(167,21):(362): muxlut.tdf;
			muxlut:11:(167,21):(349): muxlut.tdf;
			muxlut:11:(167,21):(336): muxlut.tdf;
			muxlut:11:(167,21):(323): muxlut.tdf;
			muxlut:11:(167,21):(310): muxlut.tdf;
			muxlut:11:(167,21):(297): muxlut.tdf;
			muxlut:11:(167,21):(284): muxlut.tdf;
			muxlut:11:(167,21):(271): muxlut.tdf;
			muxlut:11:(167,21):(258): muxlut.tdf;
			muxlut:11:(167,21):(245): muxlut.tdf;
			muxlut:11:(167,21):(232): muxlut.tdf;
			muxlut:11:(167,21):(219): muxlut.tdf;
			muxlut:11:(167,21):(206): muxlut.tdf;
			muxlut:11:(167,21):(193): muxlut.tdf;
			muxlut:11:(167,21):(180): muxlut.tdf;
			altshift:13:(88,2):(117,external_latency_ffs): altshift.tdf;
		}
		lpm_mux:10:(64,1):(159,epp_bmux): lpm_mux.tdf
		{
			muxlut:11:(167,21):(166): muxlut.tdf;
			muxlut:11:(167,21):(153): muxlut.tdf;
			muxlut:11:(167,21):(140): muxlut.tdf;
			muxlut:11:(167,21):(127): muxlut.tdf;
			muxlut:11:(167,21):(114): muxlut.tdf;
			muxlut:11:(167,21):(101): muxlut.tdf;
			muxlut:11:(167,21):(88): muxlut.tdf;
			muxlut:11:(167,21):(75): muxlut.tdf;
			altshift:6:(88,2):(54,external_latency_ffs): altshift.tdf;
		}
		lpm_mux:4:(61,1):(101,epp_mux): lpm_mux.tdf
		{
			muxlut:7:(167,21):(237): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(219): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(201): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(183): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(165): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(147): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(129): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			muxlut:7:(167,21):(111): muxlut.tdf
			{
				muxlut:9:(273,21):(57): muxlut.tdf;
				muxlut:8:(250,27):(40): muxlut.tdf;
			}
			altshift:6:(88,2):(90,external_latency_ffs): altshift.tdf;
			bypassff:5:(82,17):(80,sel_latency_ff0): bypassff.tdf;
		}
		lpm_decode:1:(58,1):(85,dc): lpm_decode.tdf
		{
			declut:3:(94,5):(56,decoder): declut.tdf;
			altshift:2:(75,2):(39,external_latency_ffs): altshift.tdf;
		}
	}
}
